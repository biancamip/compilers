Terminals unused in grammar

    TOKEN_ERROR


State 34 conflicts: 9 shift/reduce
State 52 conflicts: 9 shift/reduce
State 53 conflicts: 9 shift/reduce
State 54 conflicts: 9 shift/reduce
State 55 conflicts: 9 shift/reduce
State 56 conflicts: 9 shift/reduce
State 57 conflicts: 9 shift/reduce
State 58 conflicts: 9 shift/reduce
State 59 conflicts: 9 shift/reduce
State 60 conflicts: 9 shift/reduce
State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: var program
    2        | func program
    3        | ε

    4 var: var_type TOKEN_IDENTIFIER '=' literal ';'
    5    | var_type array '=' literal_list ';'
    6    | var_type array ';'

    7 var_type: KW_INT
    8         | KW_CHAR

    9 literal: LIT_INT
   10        | LIT_STRING
   11        | LIT_CHAR

   12 array: TOKEN_IDENTIFIER '[' expr ']'

   13 literal_list: literal ' ' literal_list
   14             | literal

   15 func: var_type TOKEN_IDENTIFIER '(' func_params_list ')' cmd

   16 func_params_list: var_type TOKEN_IDENTIFIER ',' func_params_list
   17                 | var_type TOKEN_IDENTIFIER

   18 cmd: attribution
   19    | flow_ctrl
   20    | cmd_block
   21    | KW_RETURN expr
   22    | KW_PRINT print_args_list
   23    | KW_READ TOKEN_IDENTIFIER
   24    | ε

   25 attribution: array '=' expr
   26            | TOKEN_IDENTIFIER '=' expr

   27 flow_ctrl: KW_IF '(' expr ')' KW_THEN cmd
   28          | KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd
   29          | KW_WHILE '(' expr ')' cmd

   30 cmd_block: '{' cmd_list '}'

   31 cmd_list: cmd ';' cmd_list
   32         | ε

   33 expr: TOKEN_IDENTIFIER
   34     | literal
   35     | array
   36     | expr '+' expr
   37     | expr '-' expr
   38     | expr '*' expr
   39     | expr '/' expr
   40     | expr '<' expr
   41     | expr '>' expr
   42     | expr '=' expr
   43     | expr '&' expr
   44     | expr '|' expr
   45     | '~' expr
   46     | TOKEN_IDENTIFIER '(' args_list ')'
   47     | '(' expr ')'
   48     | ε

   49 args_list: expr ',' args_list
   50          | expr

   51 print_args_list: expr ' ' print_args_list
   52                | expr


Terminals, with rules where they appear

    $end (0) 0
    ' ' (32) 13 51
    '&' (38) 43
    '(' (40) 15 27 28 29 46 47
    ')' (41) 15 27 28 29 46 47
    '*' (42) 38
    '+' (43) 36
    ',' (44) 16 49
    '-' (45) 37
    '/' (47) 39
    ';' (59) 4 5 6 31
    '<' (60) 40
    '=' (61) 4 5 25 26 42
    '>' (62) 41
    '[' (91) 12
    ']' (93) 12
    '{' (123) 30
    '|' (124) 44
    '}' (125) 30
    '~' (126) 45
    error (256)
    KW_CHAR (258) 8
    KW_INT (259) 7
    KW_IF (260) 27 28
    KW_THEN (261) 27 28
    KW_ELSE (262) 28
    KW_WHILE (263) 29
    KW_READ (264) 23
    KW_PRINT (265) 22
    KW_RETURN (266) 21
    TOKEN_ERROR (267)
    TOKEN_IDENTIFIER <symbol> (268) 4 12 15 16 17 23 26 33 46
    LIT_INT <symbol> (269) 9
    LIT_CHAR <symbol> (270) 11
    LIT_STRING <symbol> (271) 10


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1 2 3
        on right: 0 1 2
    var (38)
        on left: 4 5 6
        on right: 1
    var_type (39)
        on left: 7 8
        on right: 4 5 6 15 16 17
    literal (40)
        on left: 9 10 11
        on right: 4 13 14 34
    array (41)
        on left: 12
        on right: 5 6 25 35
    literal_list (42)
        on left: 13 14
        on right: 5 13
    func (43)
        on left: 15
        on right: 2
    func_params_list (44)
        on left: 16 17
        on right: 15 16
    cmd (45)
        on left: 18 19 20 21 22 23 24
        on right: 15 27 28 29 31
    attribution (46)
        on left: 25 26
        on right: 18
    flow_ctrl (47)
        on left: 27 28 29
        on right: 19
    cmd_block (48)
        on left: 30
        on right: 20
    cmd_list (49)
        on left: 31 32
        on right: 30 31
    expr (50)
        on left: 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
        on right: 12 21 25 26 27 28 29 36 37 38 39 40 41 42 43 44 45 47 49 50 51 52
    args_list (51)
        on left: 49 50
        on right: 46 49
    print_args_list (52)
        on left: 51 52
        on right: 22 51


State 0

    0 $accept: • program $end

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2

    $default  reduce using rule 3 (program)

    program   go to state 3
    var       go to state 4
    var_type  go to state 5
    func      go to state 6


State 1

    8 var_type: KW_CHAR •

    $default  reduce using rule 8 (var_type)


State 2

    7 var_type: KW_INT •

    $default  reduce using rule 7 (var_type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 7


State 4

    1 program: var • program

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2

    $default  reduce using rule 3 (program)

    program   go to state 8
    var       go to state 4
    var_type  go to state 5
    func      go to state 6


State 5

    4 var: var_type • TOKEN_IDENTIFIER '=' literal ';'
    5    | var_type • array '=' literal_list ';'
    6    | var_type • array ';'
   15 func: var_type • TOKEN_IDENTIFIER '(' func_params_list ')' cmd

    TOKEN_IDENTIFIER  shift, and go to state 9

    array  go to state 10


State 6

    2 program: func • program

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2

    $default  reduce using rule 3 (program)

    program   go to state 11
    var       go to state 4
    var_type  go to state 5
    func      go to state 6


State 7

    0 $accept: program $end •

    $default  accept


State 8

    1 program: var program •

    $default  reduce using rule 1 (program)


State 9

    4 var: var_type TOKEN_IDENTIFIER • '=' literal ';'
   12 array: TOKEN_IDENTIFIER • '[' expr ']'
   15 func: var_type TOKEN_IDENTIFIER • '(' func_params_list ')' cmd

    '='  shift, and go to state 12
    '['  shift, and go to state 13
    '('  shift, and go to state 14


State 10

    5 var: var_type array • '=' literal_list ';'
    6    | var_type array • ';'

    '='  shift, and go to state 15
    ';'  shift, and go to state 16


State 11

    2 program: func program •

    $default  reduce using rule 2 (program)


State 12

    4 var: var_type TOKEN_IDENTIFIER '=' • literal ';'

    LIT_INT     shift, and go to state 17
    LIT_CHAR    shift, and go to state 18
    LIT_STRING  shift, and go to state 19

    literal  go to state 20


State 13

   12 array: TOKEN_IDENTIFIER '[' • expr ']'

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 26


State 14

   15 func: var_type TOKEN_IDENTIFIER '(' • func_params_list ')' cmd

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2

    var_type          go to state 27
    func_params_list  go to state 28


State 15

    5 var: var_type array '=' • literal_list ';'

    LIT_INT     shift, and go to state 17
    LIT_CHAR    shift, and go to state 18
    LIT_STRING  shift, and go to state 19

    literal       go to state 29
    literal_list  go to state 30


State 16

    6 var: var_type array ';' •

    $default  reduce using rule 6 (var)


State 17

    9 literal: LIT_INT •

    $default  reduce using rule 9 (literal)


State 18

   11 literal: LIT_CHAR •

    $default  reduce using rule 11 (literal)


State 19

   10 literal: LIT_STRING •

    $default  reduce using rule 10 (literal)


State 20

    4 var: var_type TOKEN_IDENTIFIER '=' literal • ';'

    ';'  shift, and go to state 31


State 21

   12 array: TOKEN_IDENTIFIER • '[' expr ']'
   33 expr: TOKEN_IDENTIFIER •
   46     | TOKEN_IDENTIFIER • '(' args_list ')'

    '['  shift, and go to state 13
    '('  shift, and go to state 32

    $default  reduce using rule 33 (expr)


State 22

   47 expr: '(' • expr ')'

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 33


State 23

   45 expr: '~' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 34


State 24

   34 expr: literal •

    $default  reduce using rule 34 (expr)


State 25

   35 expr: array •

    $default  reduce using rule 35 (expr)


State 26

   12 array: TOKEN_IDENTIFIER '[' expr • ']'
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    ']'  shift, and go to state 36
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44


State 27

   16 func_params_list: var_type • TOKEN_IDENTIFIER ',' func_params_list
   17                 | var_type • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 45


State 28

   15 func: var_type TOKEN_IDENTIFIER '(' func_params_list • ')' cmd

    ')'  shift, and go to state 46


State 29

   13 literal_list: literal • ' ' literal_list
   14             | literal •

    ' '  shift, and go to state 47

    $default  reduce using rule 14 (literal_list)


State 30

    5 var: var_type array '=' literal_list • ';'

    ';'  shift, and go to state 48


State 31

    4 var: var_type TOKEN_IDENTIFIER '=' literal ';' •

    $default  reduce using rule 4 (var)


State 32

   46 expr: TOKEN_IDENTIFIER '(' • args_list ')'

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal    go to state 24
    array      go to state 25
    expr       go to state 49
    args_list  go to state 50


State 33

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr
   47     | '(' expr • ')'

    '='  shift, and go to state 35
    ')'  shift, and go to state 51
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44


State 34

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr
   45     | '~' expr •

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 45 (expr)]
    '+'       [reduce using rule 45 (expr)]
    '-'       [reduce using rule 45 (expr)]
    '*'       [reduce using rule 45 (expr)]
    '/'       [reduce using rule 45 (expr)]
    '<'       [reduce using rule 45 (expr)]
    '>'       [reduce using rule 45 (expr)]
    '&'       [reduce using rule 45 (expr)]
    '|'       [reduce using rule 45 (expr)]
    $default  reduce using rule 45 (expr)


State 35

   42 expr: expr '=' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 52


State 36

   12 array: TOKEN_IDENTIFIER '[' expr ']' •

    $default  reduce using rule 12 (array)


State 37

   36 expr: expr '+' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 53


State 38

   37 expr: expr '-' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 54


State 39

   38 expr: expr '*' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 55


State 40

   39 expr: expr '/' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 56


State 41

   40 expr: expr '<' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 57


State 42

   41 expr: expr '>' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 58


State 43

   43 expr: expr '&' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 59


State 44

   44 expr: expr '|' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 60


State 45

   16 func_params_list: var_type TOKEN_IDENTIFIER • ',' func_params_list
   17                 | var_type TOKEN_IDENTIFIER •

    ','  shift, and go to state 61

    $default  reduce using rule 17 (func_params_list)


State 46

   15 func: var_type TOKEN_IDENTIFIER '(' func_params_list ')' • cmd

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 70
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73


State 47

   13 literal_list: literal ' ' • literal_list

    LIT_INT     shift, and go to state 17
    LIT_CHAR    shift, and go to state 18
    LIT_STRING  shift, and go to state 19

    literal       go to state 29
    literal_list  go to state 74


State 48

    5 var: var_type array '=' literal_list ';' •

    $default  reduce using rule 5 (var)


State 49

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr
   49 args_list: expr • ',' args_list
   50          | expr •

    '='  shift, and go to state 35
    ','  shift, and go to state 75
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    $default  reduce using rule 50 (args_list)


State 50

   46 expr: TOKEN_IDENTIFIER '(' args_list • ')'

    ')'  shift, and go to state 76


State 51

   47 expr: '(' expr ')' •

    $default  reduce using rule 47 (expr)


State 52

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   42     | expr '=' expr •
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 42 (expr)]
    '+'       [reduce using rule 42 (expr)]
    '-'       [reduce using rule 42 (expr)]
    '*'       [reduce using rule 42 (expr)]
    '/'       [reduce using rule 42 (expr)]
    '<'       [reduce using rule 42 (expr)]
    '>'       [reduce using rule 42 (expr)]
    '&'       [reduce using rule 42 (expr)]
    '|'       [reduce using rule 42 (expr)]
    $default  reduce using rule 42 (expr)


State 53

   36 expr: expr • '+' expr
   36     | expr '+' expr •
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 36 (expr)]
    '+'       [reduce using rule 36 (expr)]
    '-'       [reduce using rule 36 (expr)]
    '*'       [reduce using rule 36 (expr)]
    '/'       [reduce using rule 36 (expr)]
    '<'       [reduce using rule 36 (expr)]
    '>'       [reduce using rule 36 (expr)]
    '&'       [reduce using rule 36 (expr)]
    '|'       [reduce using rule 36 (expr)]
    $default  reduce using rule 36 (expr)


State 54

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   37     | expr '-' expr •
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 37 (expr)]
    '+'       [reduce using rule 37 (expr)]
    '-'       [reduce using rule 37 (expr)]
    '*'       [reduce using rule 37 (expr)]
    '/'       [reduce using rule 37 (expr)]
    '<'       [reduce using rule 37 (expr)]
    '>'       [reduce using rule 37 (expr)]
    '&'       [reduce using rule 37 (expr)]
    '|'       [reduce using rule 37 (expr)]
    $default  reduce using rule 37 (expr)


State 55

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   38     | expr '*' expr •
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 38 (expr)]
    '+'       [reduce using rule 38 (expr)]
    '-'       [reduce using rule 38 (expr)]
    '*'       [reduce using rule 38 (expr)]
    '/'       [reduce using rule 38 (expr)]
    '<'       [reduce using rule 38 (expr)]
    '>'       [reduce using rule 38 (expr)]
    '&'       [reduce using rule 38 (expr)]
    '|'       [reduce using rule 38 (expr)]
    $default  reduce using rule 38 (expr)


State 56

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   39     | expr '/' expr •
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 39 (expr)]
    '+'       [reduce using rule 39 (expr)]
    '-'       [reduce using rule 39 (expr)]
    '*'       [reduce using rule 39 (expr)]
    '/'       [reduce using rule 39 (expr)]
    '<'       [reduce using rule 39 (expr)]
    '>'       [reduce using rule 39 (expr)]
    '&'       [reduce using rule 39 (expr)]
    '|'       [reduce using rule 39 (expr)]
    $default  reduce using rule 39 (expr)


State 57

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   40     | expr '<' expr •
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 40 (expr)]
    '+'       [reduce using rule 40 (expr)]
    '-'       [reduce using rule 40 (expr)]
    '*'       [reduce using rule 40 (expr)]
    '/'       [reduce using rule 40 (expr)]
    '<'       [reduce using rule 40 (expr)]
    '>'       [reduce using rule 40 (expr)]
    '&'       [reduce using rule 40 (expr)]
    '|'       [reduce using rule 40 (expr)]
    $default  reduce using rule 40 (expr)


State 58

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   41     | expr '>' expr •
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 41 (expr)]
    '+'       [reduce using rule 41 (expr)]
    '-'       [reduce using rule 41 (expr)]
    '*'       [reduce using rule 41 (expr)]
    '/'       [reduce using rule 41 (expr)]
    '<'       [reduce using rule 41 (expr)]
    '>'       [reduce using rule 41 (expr)]
    '&'       [reduce using rule 41 (expr)]
    '|'       [reduce using rule 41 (expr)]
    $default  reduce using rule 41 (expr)


State 59

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   43     | expr '&' expr •
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 43 (expr)]
    '+'       [reduce using rule 43 (expr)]
    '-'       [reduce using rule 43 (expr)]
    '*'       [reduce using rule 43 (expr)]
    '/'       [reduce using rule 43 (expr)]
    '<'       [reduce using rule 43 (expr)]
    '>'       [reduce using rule 43 (expr)]
    '&'       [reduce using rule 43 (expr)]
    '|'       [reduce using rule 43 (expr)]
    $default  reduce using rule 43 (expr)


State 60

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr
   44     | expr '|' expr •

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    '='       [reduce using rule 44 (expr)]
    '+'       [reduce using rule 44 (expr)]
    '-'       [reduce using rule 44 (expr)]
    '*'       [reduce using rule 44 (expr)]
    '/'       [reduce using rule 44 (expr)]
    '<'       [reduce using rule 44 (expr)]
    '>'       [reduce using rule 44 (expr)]
    '&'       [reduce using rule 44 (expr)]
    '|'       [reduce using rule 44 (expr)]
    $default  reduce using rule 44 (expr)


State 61

   16 func_params_list: var_type TOKEN_IDENTIFIER ',' • func_params_list

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2

    var_type          go to state 27
    func_params_list  go to state 77


State 62

   27 flow_ctrl: KW_IF • '(' expr ')' KW_THEN cmd
   28          | KW_IF • '(' expr ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 78


State 63

   29 flow_ctrl: KW_WHILE • '(' expr ')' cmd

    '('  shift, and go to state 79


State 64

   23 cmd: KW_READ • TOKEN_IDENTIFIER

    TOKEN_IDENTIFIER  shift, and go to state 80


State 65

   22 cmd: KW_PRINT • print_args_list

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal          go to state 24
    array            go to state 25
    expr             go to state 81
    print_args_list  go to state 82


State 66

   21 cmd: KW_RETURN • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 83


State 67

   12 array: TOKEN_IDENTIFIER • '[' expr ']'
   26 attribution: TOKEN_IDENTIFIER • '=' expr

    '='  shift, and go to state 84
    '['  shift, and go to state 13


State 68

   30 cmd_block: '{' • cmd_list '}'

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    '}'       reduce using rule 32 (cmd_list)
    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 85
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73
    cmd_list     go to state 86


State 69

   25 attribution: array • '=' expr

    '='  shift, and go to state 87


State 70

   15 func: var_type TOKEN_IDENTIFIER '(' func_params_list ')' cmd •

    $default  reduce using rule 15 (func)


State 71

   18 cmd: attribution •

    $default  reduce using rule 18 (cmd)


State 72

   19 cmd: flow_ctrl •

    $default  reduce using rule 19 (cmd)


State 73

   20 cmd: cmd_block •

    $default  reduce using rule 20 (cmd)


State 74

   13 literal_list: literal ' ' literal_list •

    $default  reduce using rule 13 (literal_list)


State 75

   49 args_list: expr ',' • args_list

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal    go to state 24
    array      go to state 25
    expr       go to state 49
    args_list  go to state 88


State 76

   46 expr: TOKEN_IDENTIFIER '(' args_list ')' •

    $default  reduce using rule 46 (expr)


State 77

   16 func_params_list: var_type TOKEN_IDENTIFIER ',' func_params_list •

    $default  reduce using rule 16 (func_params_list)


State 78

   27 flow_ctrl: KW_IF '(' • expr ')' KW_THEN cmd
   28          | KW_IF '(' • expr ')' KW_THEN cmd KW_ELSE cmd

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 89


State 79

   29 flow_ctrl: KW_WHILE '(' • expr ')' cmd

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 90


State 80

   23 cmd: KW_READ TOKEN_IDENTIFIER •

    $default  reduce using rule 23 (cmd)


State 81

   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr
   51 print_args_list: expr • ' ' print_args_list
   52                | expr •

    '='  shift, and go to state 35
    ' '  shift, and go to state 91
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    $default  reduce using rule 52 (print_args_list)


State 82

   22 cmd: KW_PRINT print_args_list •

    $default  reduce using rule 22 (cmd)


State 83

   21 cmd: KW_RETURN expr •
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    $default  reduce using rule 21 (cmd)


State 84

   26 attribution: TOKEN_IDENTIFIER '=' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 92


State 85

   31 cmd_list: cmd • ';' cmd_list

    ';'  shift, and go to state 93


State 86

   30 cmd_block: '{' cmd_list • '}'

    '}'  shift, and go to state 94


State 87

   25 attribution: array '=' • expr

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal  go to state 24
    array    go to state 25
    expr     go to state 95


State 88

   49 args_list: expr ',' args_list •

    $default  reduce using rule 49 (args_list)


State 89

   27 flow_ctrl: KW_IF '(' expr • ')' KW_THEN cmd
   28          | KW_IF '(' expr • ')' KW_THEN cmd KW_ELSE cmd
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    ')'  shift, and go to state 96
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44


State 90

   29 flow_ctrl: KW_WHILE '(' expr • ')' cmd
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    ')'  shift, and go to state 97
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44


State 91

   51 print_args_list: expr ' ' • print_args_list

    TOKEN_IDENTIFIER  shift, and go to state 21
    LIT_INT           shift, and go to state 17
    LIT_CHAR          shift, and go to state 18
    LIT_STRING        shift, and go to state 19
    '('               shift, and go to state 22
    '~'               shift, and go to state 23

    $default  reduce using rule 48 (expr)

    literal          go to state 24
    array            go to state 25
    expr             go to state 81
    print_args_list  go to state 98


State 92

   26 attribution: TOKEN_IDENTIFIER '=' expr •
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    $default  reduce using rule 26 (attribution)


State 93

   31 cmd_list: cmd ';' • cmd_list

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    '}'       reduce using rule 32 (cmd_list)
    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 85
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73
    cmd_list     go to state 99


State 94

   30 cmd_block: '{' cmd_list '}' •

    $default  reduce using rule 30 (cmd_block)


State 95

   25 attribution: array '=' expr •
   36 expr: expr • '+' expr
   37     | expr • '-' expr
   38     | expr • '*' expr
   39     | expr • '/' expr
   40     | expr • '<' expr
   41     | expr • '>' expr
   42     | expr • '=' expr
   43     | expr • '&' expr
   44     | expr • '|' expr

    '='  shift, and go to state 35
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38
    '*'  shift, and go to state 39
    '/'  shift, and go to state 40
    '<'  shift, and go to state 41
    '>'  shift, and go to state 42
    '&'  shift, and go to state 43
    '|'  shift, and go to state 44

    $default  reduce using rule 25 (attribution)


State 96

   27 flow_ctrl: KW_IF '(' expr ')' • KW_THEN cmd
   28          | KW_IF '(' expr ')' • KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 100


State 97

   29 flow_ctrl: KW_WHILE '(' expr ')' • cmd

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 101
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73


State 98

   51 print_args_list: expr ' ' print_args_list •

    $default  reduce using rule 51 (print_args_list)


State 99

   31 cmd_list: cmd ';' cmd_list •

    $default  reduce using rule 31 (cmd_list)


State 100

   27 flow_ctrl: KW_IF '(' expr ')' KW_THEN • cmd
   28          | KW_IF '(' expr ')' KW_THEN • cmd KW_ELSE cmd

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 102
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73


State 101

   29 flow_ctrl: KW_WHILE '(' expr ')' cmd •

    $default  reduce using rule 29 (flow_ctrl)


State 102

   27 flow_ctrl: KW_IF '(' expr ')' KW_THEN cmd •
   28          | KW_IF '(' expr ')' KW_THEN cmd • KW_ELSE cmd

    KW_ELSE  shift, and go to state 103

    KW_ELSE   [reduce using rule 27 (flow_ctrl)]
    $default  reduce using rule 27 (flow_ctrl)


State 103

   28 flow_ctrl: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE • cmd

    KW_IF             shift, and go to state 62
    KW_WHILE          shift, and go to state 63
    KW_READ           shift, and go to state 64
    KW_PRINT          shift, and go to state 65
    KW_RETURN         shift, and go to state 66
    TOKEN_IDENTIFIER  shift, and go to state 67
    '{'               shift, and go to state 68

    $default  reduce using rule 24 (cmd)

    array        go to state 69
    cmd          go to state 104
    attribution  go to state 71
    flow_ctrl    go to state 72
    cmd_block    go to state 73


State 104

   28 flow_ctrl: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd •

    $default  reduce using rule 28 (flow_ctrl)
